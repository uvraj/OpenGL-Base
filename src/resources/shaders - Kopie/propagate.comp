#version 460

layout (local_size_x = 4, local_size_y = 4, local_size_z = 4) in;
layout (r32f) uniform image3D propagationVolume;

uniform sampler3D propagationVolumeHistory;
uniform sampler3D voxelStructure;

void propagate(ivec3 iPos) {
    vec4 centerSample = texelFetch(voxelStructure, iPos, 0);

    // Voxel is filled: don't propagate.
    if (centerSample.g > 0.5) {
        imageStore(propagationVolume, iPos, vec4(centerSample.r));
        return;
    }

    ivec3 offsets[6] = ivec3[6] (
        ivec3(1, 0, 0), 
        ivec3(-1, 0, 0),
        ivec3(0, 1, 0),
        ivec3(0, -1, 0),
        ivec3(0, 0, 1),
        ivec3(0, 0, -1)
    );

    float sum = 0.0;

    for (int i = 0; i < 6; i++) {
        sum += texelFetch(propagationVolumeHistory, iPos + offsets[i], 0).r;
    }

    imageStore(propagationVolume, iPos, vec4(sum / 6.0));
}

void main() {
    ivec3 iPos = ivec3(gl_GlobalInvocationID);
    vec3 nCoord = (iPos + 0.5) / 32;

    propagate(iPos);
}